import disnake
import requests
from bot_init import bot
from config import AUTHOR, ACTION_GITHUB
from disnake.ext import commands

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞ GitHub
def get_github_org_members():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞ GitHub."""
    url = f'https://api.github.com/orgs/{AUTHOR}/members'

    headers = {
        "Accept": "application/vnd.github.v3+json",
        "Authorization": f"Bearer {ACTION_GITHUB}"
    }

    try:
        response = requests.get(url, headers=headers)
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
        members = response.json()   # –ü–æ–ª—É—á–∞–µ–º JSON-–æ—Ç–≤–µ—Ç —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏
        return [member['login'] for member in members]  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ª–æ–≥–∏–Ω–æ–≤ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    except requests.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {e}")
        return []

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –Ω–∞ GitHub
def get_github_repo_owners():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –Ω–∞ GitHub."""
    url = f'https://api.github.com/orgs/{AUTHOR}/memberships'
    
    headers = {
        "Accept": "application/vnd.github.v3+json",
        "Authorization": f"Bearer {ACTION_GITHUB}"
    }

    try:
        response = requests.get(url, headers=headers)
        response.raise_for_status()
        members = response.json()
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ (admins)
        owners = [member['login'] for member in members if member['role'] == 'admin']
        return owners
    except requests.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤: {e}")
        return []

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞ GitHub
def get_github_teams():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞ GitHub."""
    url = f'https://api.github.com/orgs/{AUTHOR}/teams'
    
    headers = {
        "Accept": "application/vnd.github.v3+json",
        "Authorization": f"Bearer {ACTION_GITHUB}"
    }

    try:
        response = requests.get(url, headers=headers)
        response.raise_for_status()
        teams = response.json()
        return teams
    except requests.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥: {e}")
        return []

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥—ã
def get_team_members(team_slug):
    """–ü–æ–ª—É—á–∞–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–∞ GitHub."""
    url = f'https://api.github.com/orgs/{AUTHOR}/teams/{team_slug}/members'
    
    headers = {
        "Accept": "application/vnd.github.v3+json",
        "Authorization": f"Bearer {ACTION_GITHUB}"
    }

    try:
        response = requests.get(url, headers=headers)
        response.raise_for_status()
        members = response.json()
        return [member['login'] for member in members]
    except requests.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥—ã {team_slug}: {e}")
        return []

@bot.command(
    name="git_team",
    help="–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞ GitHub."
)
async def git_team(ctx):
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞ GitHub.
    """
    members = get_github_org_members()
    owners = get_github_repo_owners()

    if not members:
        await ctx.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏.")
        return

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã (Mainteiners)
    teams = get_github_teams()
    mainteiners_team_slug = None
    
    # –ò—â–µ–º –∫–æ–º–∞–Ω–¥—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º "Mainteiners"
    for team in teams:
        if team['name'].lower() == 'adt_maintainer':
            mainteiners_team_slug = team['slug']
            break

    if not mainteiners_team_slug:
        await ctx.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ–º–∞–Ω–¥—É.")
        return

    # –ü–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã
    mainteiners_members = get_team_members(mainteiners_team_slug)

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    sorted_owners = [member for member in owners if member in members]
    sorted_mainteiners = [member for member in members if member in mainteiners_members]
    sorted_members = [member for member in members if member not in owners and member not in mainteiners_members]

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –≤–ª–∞–¥–µ–ª—å—Ü–∞–º–∏ (—Å —ç–º–æ–¥–∑–∏ –∫–æ—Ä–æ–Ω—ã)
    owners_list = "üëë " + "\nüëë ".join([f"**{owner}**" for owner in sorted_owners])
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã (Mainteiners)
    mainteiners_list = "üõ†Ô∏è " + "\nüõ†Ô∏è ".join([f"**{member}** (Mainteiner)" for member in sorted_mainteiners])
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏
    members_list = "üë§ " + "\nüë§ ".join([f"**{member}**" for member in sorted_members])

    if len(owners_list + mainteiners_list + members_list) > 2000:
        # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π, –≤—ã–≤–æ–¥–∏–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 2000 —Å–∏–º–≤–æ–ª–æ–≤
        combined_list = owners_list + "\n\n" + mainteiners_list + "\n\n" + members_list
        combined_list = combined_list[:2000] + "..."
    else:
        combined_list = owners_list + "\n\n" + mainteiners_list + "\n\n" + members_list

    # –°–æ–∑–¥–∞—ë–º Embed —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
    embed = disnake.Embed(
        title="üåü –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞ GitHub üöÄ",
        description=f"**–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è**: {AUTHOR}\n**–í–ª–∞–¥–µ–ª—å—Ü—ã**:\n{owners_list}\n\n**Mainteiners**:\n{mainteiners_list}\n\n**–û—Å—Ç–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏**:\n{members_list}",
        color=disnake.Color.dark_grey(),
        timestamp=disnake.utils.utcnow()
    )

    embed.set_footer(text=f"–ó–∞–ø—Ä–æ—Å –æ—Ç {ctx.author.display_name}", icon_url=ctx.author.avatar.url)

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è
    embed.add_field(
        name="üë• –ö—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è?",
        value="**–¢–æ–ª—å–∫–æ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏** –º–æ–≥—É—Ç –±—ã—Ç—å –≤ —Å–ø–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è, –ø–∏—à–∏—Ç–µ –≤ https://discord.com/channels/901772674865455115/1297176881732386847.",
        inline=False
    )
    embed.add_field(
        name="üì£ –í–Ω–∏–º–∞–Ω–∏–µ!",
        value="–≠—Ç–æ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞ GitHub. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —É—á–∞—Å—Ç–Ω–∏–∫–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É &git_logininfo <login> –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.",
        inline=False
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Embed –≤ –∫–∞–Ω–∞–ª
    await ctx.send(embed=embed)
 