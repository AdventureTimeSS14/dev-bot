import disnake
import requests
from bot_init import bot
from config import AUTHOR, REPOSITORIES

# URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤–µ—Ç–æ–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
def get_branches_url(repository):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ GitHub API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤–µ—Ç–æ–∫."""
    return f'https://api.github.com/repos/{AUTHOR}/{REPOSITORIES[repository]}/branches'

def fetch_branches_data(url):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –≤–µ—Ç–∫–∞—Ö —Å GitHub."""
    headers = {"Accept": "application/vnd.github.v3+json"}
    try:
        response = requests.get(url, headers=headers, timeout=10)
        response.raise_for_status()
        return response.json()
    except requests.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –∫ GitHub API: {e}")
        return None

@bot.command(
    name="branch",
    help="–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤–µ—Ç–æ–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–≤–æ–¥—è—Ç—Å—è –≤–µ—Ç–∫–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è 'n', –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å 'n' –∏–ª–∏ 'o'.",
)
async def get_branches(ctx, repository: str = "n"):
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤–µ—Ç–æ–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è 'n' –∏–ª–∏ 'o'.
    –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –±—É–¥–µ—Ç –≤—ã–±—Ä–∞–Ω 'n'.
    """
    if repository not in ['n', 'o']:
        await ctx.send("‚ùå –£–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'n' –∏–ª–∏ 'o'.")
        return

    url = get_branches_url(repository)
    branches = fetch_branches_data(url)

    if not branches:
        await ctx.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤–µ—Ç–æ–∫.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –≤–µ—Ç–∫–∞–º–∏
    branch_names = [branch["name"] for branch in branches]
    branches_list = "\n".join(branch_names)

    # –°–æ–∑–¥–∞—ë–º Embed —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
    embed = disnake.Embed(
        title=f"–°–ø–∏—Å–æ–∫ –≤–µ—Ç–æ–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è {REPOSITORIES[repository]}",
        description=f"–°–ø–∏—Å–æ–∫ –≤–µ—Ç–æ–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è `{REPOSITORIES[repository]}`.",
        color=disnake.Color.green(),
        timestamp=disnake.utils.utcnow()
    )

    # –≠–º–æ–¥–∑–∏ –∏ —Å—Ç–∏–ª–∏
    embed.set_thumbnail(url="https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png")
    embed.set_footer(text=f"–ó–∞–ø—Ä–æ—Å –æ—Ç {ctx.author.display_name}", icon_url=ctx.author.avatar.url)

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å–ø–∏—Å–æ–∫ –≤–µ—Ç–æ–∫
    embed.add_field(
        name="üöÄ –í–µ—Ç–∫–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:",
        value=branches_list if branches_list else "‚ùå –ù–µ—Ç –≤–µ—Ç–æ–∫",
        inline=False
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Embed –≤ –∫–∞–Ω–∞–ª
    await ctx.send(embed=embed)
