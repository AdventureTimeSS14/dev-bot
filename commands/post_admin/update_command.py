from bot_init import bot
from commands.misc.check_roles import has_any_role_by_id
from commands.post_admin.utils import send_server_request
from config import (
    SERVER_ADMIN_POST,
    POST_DATA_DEV,
    POST_DATA_MRP,
    POST_HEADERS_DEV,
    POST_HEADERS_MPR,
    ADDRESS_DEV,
    ADDRESS_MRP
)


@bot.command(name="update")
@has_any_role_by_id(SERVER_ADMIN_POST)
async def update(ctx, server_name: str):
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è MRP –∏–ª–∏ DEV —Å–µ—Ä–≤–µ—Ä–∞.
    –î–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é –∏–∑ SERVER_ADMIN_POST.
    """
    url_mrp = f"http://{ADDRESS_MRP}:5000/instances/MRP/update"
    url_dev = f"http://{ADDRESS_DEV}:5000/instances/DEV/update"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –∏–º–µ–Ω–∏ —Å–µ—Ä–≤–µ—Ä–∞
    if server_name.lower() not in ["mrp", "dev"]:
        await ctx.send("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è —Å–µ—Ä–≤–µ—Ä–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'mrp' –∏–ª–∏ 'dev'.")
        return
    
    # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±–æ—Ä–∞ —Å–µ—Ä–≤–µ—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω—É–∂–Ω—ã–π –∑–∞–ø—Ä–æ—Å
    if server_name.lower() == "mrp":
        url = url_mrp
        data = POST_DATA_MRP
        headers = POST_HEADERS_MPR
    else:  # server_name.lower() == "dev"
        url = url_dev
        data = POST_DATA_DEV
        headers = POST_HEADERS_DEV
    
    # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –Ω–∞—á–∞–ª–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
    await ctx.send(f"üîÑ –ó–∞–ø—É—â–µ–Ω –ø—Ä–æ—Ç–æ–∫–æ–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è {server_name.upper()} —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
    success, message = await send_server_request(ctx, url, data, headers)
    
    if success:
        await ctx.send(f"‚úÖ –ó–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É {server_name.upper()} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
    else:
        await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –∫ —Å–µ—Ä–≤–µ—Ä—É {server_name.upper()}: {message}")
