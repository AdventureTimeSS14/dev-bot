import asyncio
import re

import discord
from discord.ext import commands
from fuzzywuzzy import fuzz
from g4f.client import Client

from consts import DISCORD_KEY

bot = commands.Bot(command_prefix='&', help_command=None, intents=discord.Intents.all())

repositories = {
    'n': 'space_station_ADT',
    'o': 'space_station'
}

# –°–ø–∏—Å–æ–∫ —Ñ—Ä–∞–∑, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å
phrases = [
    "–∫–æ–≥–¥–∞ –∞–ø—Å—Ç—Ä–∏–º?",
    "–∞–ø—Å—Ç—Ä–∏–º –∫–æ–≥–¥–∞?",
    "–∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –∞–ø—Å—Ç—Ä–∏–º?",
    "–ê–ø—Å—Ç—Ä–∏–º?",
    "–∫–∞–∫ –∞–ø—Å—Ç—Ä–∏–º?",
    "—á–æ –ø–æ –∞–ø—Å—Ç—Ä–∏–º—É",
    "–∞–ø—Å—Ç—Ä–∏–º—á–∏–∫–∫?",
    "–ê–ø—Å—Ç—Ä–∏–º —Å–∫–æ—Ä–æ?",
    "–°–∫–æ—Ä–æ —Ç–∞–º –∞–ø—Å—Ç—Ä–∏–º?",
    "–ê–ø—Å—Ç—Ä–∏–º –∫–æ–≥–¥–∞?",
    "–ê–ø—Å—Ç—Ä–∏–º",
    "upstream",
]

# –°–ø–∏—Å–æ–∫ –≤–∞—Ä–∏–∞—Ü–∏–π "–æ–±–Ω–∏–º–∞–µ—Ç"
hug_variations = [
    "*–æ–±–Ω–∏–º–∞–µ—Ç*",
    "–æ–±–Ω–∏–º–∞–µ—Ç",
    "–æ–±–Ω–∏–º–∞—à–∫–∏",
    "–æ–±–Ω–∏–º–∏",
    "–¥–∞–π –æ–±–Ω–∏–º–∞—à–µ–∫",
    "–ø—Ä–∏–∂–º–∏",
    "–æ–±–Ω–∏–º—É",
    "—Ö–æ—á—É –æ–±–Ω–∏–º–∞—à–µ–∫",
    "–æ–±–Ω—è–ª",
    "–æ–±–Ω—è–ª–∞"
]

author = "AdventureTimeSS14"

pattern = re.compile(r'\[(n|o)(\d+)\]')

def check_github_issue_or_pr(repo_code, number):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ GitHub issue –∏–ª–∏ PR –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (n –∏–ª–∏ o).

    Args:
        repo_code: –ö–æ–¥ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (n –∏–ª–∏ o).
        number: –ù–æ–º–µ—Ä issue –∏–ª–∏ PR.

    Returns:
        –°—Å—ã–ª–∫–∞ –Ω–∞ GitHub issue –∏–ª–∏ PR, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–∞–π–¥–µ–Ω–∞, –∏–Ω–∞—á–µ None.
    """
    repo_name = repositories.get(repo_code)
    if not repo_name:
        return None

    base_url = f'https://github.com/{author}/{repo_name}'
    issue_url = f'{base_url}/issues/{number}'
    pr_url = f'{base_url}/pull/{number}'
    
    return f'[{repo_name} {number}]({pr_url})'  # You were returning the repository name and number, not the URL

@bot.event
async def on_ready():
    print(f"Bot {bot.user} is ready to work!")

@bot.command(name='help')
async def help_command(ctx):
    embed = discord.Embed(
        title="üìö –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º",
        color=discord.Color.dark_green()
    )
    embed.add_field(
        name="–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:",
        value="""
‚ùì &help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
üèì &pong - –û—Ç–≤–µ—Ç–∏—Ç 'Pong!'.
üîÑ &echo <—Å–æ–æ–±—â–µ–Ω–∏–µ> - –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
üé≠ &user_role "<—Ä–æ–ª—å>" - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ä–æ–ª—å—é.
ü§ñ &gpt <–ø—Ä–æ–º—Ç> - ChatGPT 3.5 turbo
        """,
        inline=False
    )
    embed.add_field(
        name="–î–æ–ø. –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:",
        value="""
‚è≥ –í—Å–µ–º –æ—Ç–≤–µ—á–∞–µ—Ç –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –∞–ø—Å—Ç—Ä–∏–º.
ü§ó –û–±–Ω–∏–º–∞–µ—Ç –≤ –æ—Ç–≤–µ—Ç.
        """,
        inline=False
    )
    embed.add_field(
        name="–î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:",
        value="""
        
‚ú® –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, 
 –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ —Å–æ–∑–¥–∞—Ç–µ–ª—é: –®—Ä—ë–¥—å–∫–∞ :–∑ üñ§üëæ
        
–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏:
üë®‚Äçüíª –ê–≤—Ç–æ—Ä: schrodinger71
üë• Maintainer: schrodinger71, nixsilvam, xelasto
üì° –•–æ—Å—Ç: xelasto
        """,
        inline=False
    )
    await ctx.send(embed=embed)
    
@bot.command(name='echo')
async def echo(ctx, *, message: str):
    # –°–ø–∏—Å–æ–∫ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É
    whitelist = [328502766622474240]  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ
    if ctx.author.id not in whitelist:
        await ctx.send("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
        return

    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await ctx.message.delete()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç—Ö–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ
    await ctx.send(message)  
    
@bot.command()
async def pong(ctx):  # –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–æ–¥–∏—Ç—å –ø–∏–Ω–≥ –±–æ—Ç–∞ –∑–∞–¥–µ—Ä–∂–∫—É –∏–Ω–µ–Ω—Ç–∞
    latency = round(bot.latency * 1000)  # –∑–∞–¥–µ—Ä–∂–∫–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    await ctx.send(f'Pong! –ó–∞–¥–µ—Ä–∂–∫–∞: {latency}ms')

@bot.command()
async def user_role(ctx, role_name: str):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∑–∞–¥–∞–Ω–Ω–æ–π —Ä–æ–ª—å—é –ø–æ –∏–º–µ–Ω–∏."""

    # –ü–æ–∏—Å–∫ —Ä–æ–ª–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é 
    role = discord.utils.get(ctx.guild.roles, name=role_name)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–∞–π–¥–µ–Ω–∞ –ª–∏ —Ä–æ–ª—å
    if role is None:
        await ctx.send(f"–†–æ–ª—å '{role_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å —ç—Ç–æ–π —Ä–æ–ª—å—é
    members_with_role = [member.name for member in role.members]

    # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    if members_with_role:
        await ctx.send(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å —Ä–æ–ª—å—é {role.name}: {", ".join(members_with_role)}')
    else:
        await ctx.send(f'–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é {role.name}.')

@bot.command()
async def gpt(ctx, *promt): # –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–º—Ç–∞ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è gpt 3.5 turbo."""
    client = Client()
    response = client.chat.completions.create(
        model="gpt-3.5-turbo", # –≤—ã–±–æ—Ä –º–æ–¥–µ–ª–∏
        messages=[{"role": "user", "content":  promt}],)
    # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    await ctx.send(response.choices[0].message.content)
   
@bot.event
async def on_message(message):
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —Å–∞–º–æ–≥–æ –±–æ—Ç–∞
    if message.author == bot.user:
        return
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
    if message.content.startswith(bot.command_prefix):
        await bot.process_commands(message)
        return
    

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ—Ä–∞–∑ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    if any(fuzz.ratio(message.content.lower(), phrase) >= 70 for phrase in phrases):
        await message.channel.send("–ß–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é.")
        return
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–ª–æ–≤–∞ "–∞–ø—Å—Ç—Ä–∏–º" –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    if any(phrase.lower() in message.content.lower() for phrase in phrases):
        await message.channel.send("–ß–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é.")
        return
    
    if f"<@{bot.user.id}>" in message.content:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –±–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –±–æ—Ç–∞
        text_without_mention = message.content.replace(f"<@{bot.user.id}>", "").strip()
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Ç–µ–∫—Å—Ç –ª—é–±—É—é –≤–∞—Ä–∏–∞—Ü–∏—é "–æ–±–Ω–∏–º–∞–µ—Ç"
        for variation in hug_variations:
            if fuzz.token_sort_ratio(text_without_mention.lower(), variation) > 80:
                await message.channel.send("*–û–±–Ω–∏–º–∞–µ—Ç –≤ –æ—Ç–≤–µ—Ç.*")
                break  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º —Ü–∏–∫–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    
    # –ò—â–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    match = pattern.search(message.content)
    if match:
        repo_code, number = match.groups()
        link = check_github_issue_or_pr(repo_code, number)
        if link:
            await message.channel.send(f'{link}')

    # This line should be outside the 'if match' block, so the bot still processes commands
    await bot.process_commands(message)
    
    
    # # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–º –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö
    # if message.content.startswith('[') and message.content.endswith(']'):
    #     pr_number = message.content[1:-1]  # –£–±–∏—Ä–∞–µ–º –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —Å–∫–æ–±–∫–∏

    #     # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ñ–æ—Ä–º–∞—Ç—É
    #     pattern = re.compile(r'\[(s|c|t)(\d+)\]')
    #     if re.match(pattern, pr_number):
    #         if pr_number.startswith('n'):  # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 'n'
    #             link = f"{link_new}{pr_number[1:]}"  # –£–±–∏—Ä–∞–µ–º 'n' –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É
    #             await message.channel.send(f"[space_station_ADT PR: {pr_number}]({link})")
    #         elif pr_number.startswith('o'):  # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 'o'
    #             link = f"{link_old}{pr_number[1:]}"  # –£–±–∏—Ä–∞–µ–º 'o' –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É
    #             await message.channel.send(f"[space_station PR: {pr_number}]({link})")
    #     else:
    #         await message.channel.send("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –ø—É–ª–ª-—Ä–µ–∫–≤–µ—Å—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞–ø—Ä–∏–º–µ—Ä [n123] –∏–ª–∏ [o342].")

def main():
    bot.run(DISCORD_KEY)

if __name__ == '__main__':
    main()

