# TODO: –†–µ—Ñ–∞–π—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥–∞, –≤—ã–µ—Å—Ç–∏ –º–Ω–æ–≥–æ–µ –ø–æ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Ñ–∞–π–ª–∞–º, —á—Ç–æ-—Ç–æ –º–æ–∂–Ω–æ –≤ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
import asyncio
import re
import requests
import discord
import time
from discord.ext import commands
from fuzzywuzzy import fuzz
from g4f.client import Client
from g4f.Provider import FreeGpt
from github import Github

from consts import DISCORD_KEY, PROXY, GITHUB

bot = commands.Bot(command_prefix='&', help_command=None, intents=discord.Intents.all())

repositories = {
    'n': 'space_station_ADT',
    'o': 'space_station'
}

whitelist_role = [
    1060191651538145420,  # ID —Ä–æ–ª–∏ "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞"
    1116612861993689251,  # ID —Ä–æ–ª–∏ "–°–æ–∑–¥–∞—Ç–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞üîë"
    1060264704838209586,  # ID —Ä–æ–ª–∏ "–ö—É—Ä–∞—Ç–æ—Ä –ü—Ä–æ–µ–∫—Ç–∞"
    1054908932868538449  # ID —Ä–æ–ª–∏ "–î–∏—Å–∫–æ—Ä–¥ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä"
]

# –°–ø–∏—Å–æ–∫ —Ñ—Ä–∞–∑, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å
phrases = [
    "–∫–æ–≥–¥–∞ –∞–ø—Å—Ç—Ä–∏–º?",
    "–∞–ø—Å—Ç—Ä–∏–º –∫–æ–≥–¥–∞?",
    "–∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –∞–ø—Å—Ç—Ä–∏–º?",
    "–ê–ø—Å—Ç—Ä–∏–º?",
    "–∫–∞–∫ –∞–ø—Å—Ç—Ä–∏–º?",
    "—á–æ –ø–æ –∞–ø—Å—Ç—Ä–∏–º—É",
    "–∞–ø—Å—Ç—Ä–∏–º—á–∏–∫–∫?",
    "–ê–ø—Å—Ç—Ä–∏–º —Å–∫–æ—Ä–æ?",
    "–°–∫–æ—Ä–æ —Ç–∞–º –∞–ø—Å—Ç—Ä–∏–º?",
    "–ê–ø—Å—Ç—Ä–∏–º –∫–æ–≥–¥–∞?",
    "–ê–ø—Å—Ç—Ä–∏–º",
    "upstream",
]

# –°–ø–∏—Å–æ–∫ –≤–∞—Ä–∏–∞—Ü–∏–π "–æ–±–Ω–∏–º–∞–µ—Ç"
hug_variations = [
    "*–æ–±–Ω–∏–º–∞–µ—Ç*",
    "–æ–±–Ω–∏–º–∞–µ—Ç",
    "–æ–±–Ω–∏–º–∞—à–∫–∏",
    "–æ–±–Ω–∏–º–∏",
    "–¥–∞–π –æ–±–Ω–∏–º–∞—à–µ–∫",
    "–ø—Ä–∏–∂–º–∏",
    "–æ–±–Ω–∏–º—É",
    "—Ö–æ—á—É –æ–±–Ω–∏–º–∞—à–µ–∫",
    "–æ–±–Ω—è–ª",
    "–æ–±–Ω—è–ª–∞"
]

author = "AdventureTimeSS14"

pattern = re.compile(r'\[(n|o)(\d+)\]')

def check_github_issue_or_pr(repo_code, number):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ GitHub issue –∏–ª–∏ PR –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (n –∏–ª–∏ o).

    Args:
        repo_code: –ö–æ–¥ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (n –∏–ª–∏ o).
        number: –ù–æ–º–µ—Ä issue –∏–ª–∏ PR.

    Returns:
        –°—Å—ã–ª–∫–∞ –Ω–∞ GitHub issue –∏–ª–∏ PR, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–∞–π–¥–µ–Ω–∞, –∏–Ω–∞—á–µ None.
    """
    repo_name = repositories.get(repo_code)
    if not repo_name:
        return None

    base_url = f'https://github.com/{author}/{repo_name}'
    issue_url = f'{base_url}/issues/{number}'
    pr_url = f'{base_url}/pull/{number}'
    
    return f'[{repo_name} {number}]({pr_url})'

@bot.event
async def on_ready():
    print(f"Bot {bot.user} is ready to work!")

@bot.command(name='help')
async def help_command(ctx):
    # TODO: –°–¥–µ–ª–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π –Ω–∞–ø—Ä–∏–º–µ—Ä —Ñ–∞–π–ª .json —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
    embed = discord.Embed(
        title="üìö –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º",
        color=discord.Color.dark_green()
    )
    embed.add_field(
        name="–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:",
        value="""
‚ùì &help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
üèì &pong - –û—Ç–≤–µ—Ç–∏—Ç 'Pong!'.
üîÑ &echo <—Å–æ–æ–±—â–µ–Ω–∏–µ> - –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
üé≠ &user_role "<—Ä–æ–ª—å>" - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ä–æ–ª—å—é.
ü§ñ &gpt <–ø—Ä–æ–º—Ç> - ChatGPT 3.5 turbo
üå≥ &forks n/o - –í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ä–∫–æ–≤ AdventureTimeSS14/space_station_ADT –∏–ª–∏ AdventureTimeSS14/space_station
üëÄ &review n/o - –í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –ø—É–ª–ª-—Ä–µ–∫–≤–µ—Å—Ç–æ–≤ –¥–ª—è —Ä–µ–≤—å—é (n - –Ω–æ–≤—ã–π, o - —Å—Ç–∞—Ä—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π)
        """,
        inline=False
    )
    embed.add_field(
        name="–î–æ–ø. –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:",
        value="""
‚è≥ –í—Å–µ–º –æ—Ç–≤–µ—á–∞–µ—Ç –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –∞–ø—Å—Ç—Ä–∏–º.
ü§ó –û–±–Ω–∏–º–∞–µ—Ç –≤ –æ—Ç–≤–µ—Ç.
üîé –ò—â–µ—Ç –≤ —Ç–µ–∫—Å—Ç–∞—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ [n13] [] –∏ –≤—ã–≤–æ–¥–∏—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –ø—É–ª–ª —Ä–µ–∫–≤–µ—Å—Ç, 
–µ—Å–ª–∏ n - new –Ω–æ–≤—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π o - old —Å—Ç–∞—Ä—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
```
–ü—Ä–∏–º–µ—Ä—ã:
"..[n213].."
"..[o3].."
```
        """,
        inline=False
    )
    embed.add_field(
        name="–î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:",
        value="""
        
‚ú® –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, 
 –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ —Å–æ–∑–¥–∞—Ç–µ–ª—é: –®—Ä—ë–¥—å–∫–∞ :–∑ üñ§üëæ
        """,
        inline=False
    )
    embed.add_field(
        name="–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏:",
        value="""
üë®‚Äçüíª –ê–≤—Ç–æ—Ä: schrodinger71
üë• Maintainer: schrodinger71, nixsilvam, xelasto
üì° –•–æ—Å—Ç: xelasto
        """,
        inline=False
    )
    await ctx.send(embed=embed)
    
@bot.command(name='echo')
async def echo(ctx, *, message: str):
    # –°–ø–∏—Å–æ–∫ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É
    whitelist = [328502766622474240] 

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ
    if ctx.author.id not in whitelist:
        await ctx.send("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
        return

    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await ctx.message.delete()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç—Ö–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ
    await ctx.send(message)  
    
@bot.command()
async def pong(ctx):  # –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–æ–¥–∏—Ç—å –ø–∏–Ω–≥ –±–æ—Ç–∞ –∑–∞–¥–µ—Ä–∂–∫—É –∏–Ω–µ–Ω—Ç–∞
    latency = round(bot.latency * 1000)  # –∑–∞–¥–µ—Ä–∂–∫–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    await ctx.send(f'Pong! –ó–∞–¥–µ—Ä–∂–∫–∞: {latency}ms')

@bot.command()
async def user_role(ctx, *role_names: str):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∑–∞–¥–∞–Ω–Ω–æ–π —Ä–æ–ª—å—é –ø–æ –∏–º–µ–Ω–∏."""

    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Å–ª–æ–≤–∞ –≤ —Å—Ç—Ä–æ–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏
    role_name = " ".join(role_names)

    # –ü–æ–∏—Å–∫ —Ä–æ–ª–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é 
    role = discord.utils.get(ctx.guild.roles, name=role_name)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–∞–π–¥–µ–Ω–∞ –ª–∏ —Ä–æ–ª—å
    if role is None:
        await ctx.send(f"–†–æ–ª—å '{role_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å —ç—Ç–æ–π —Ä–æ–ª—å—é
    members_with_role = [member.name for member in role.members]

    # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    if members_with_role:
        await ctx.send(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å —Ä–æ–ª—å—é {role.name}: {", ".join(members_with_role)}')
    else:
        await ctx.send(f'–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é {role.name}.')

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
last_used = {}

@bot.command()
async def gpt(ctx, *promt): 
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è gpt 3.5 turbo."""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—É—é —Ä–æ–ª—å
    if any(role.id in whitelist_role for role in ctx.author.roles):
        user_id = ctx.author.id
        current_time = time.time()  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—É —Ä–∞–Ω–µ–µ
        if user_id in last_used:
            elapsed_time = current_time - last_used[user_id]
            if elapsed_time < 20:  # –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –º–µ–Ω—å—à–µ 20 —Å–µ–∫—É–Ω–¥
                remaining_time = 20 - elapsed_time
                await ctx.send(f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ {int(remaining_time)} —Å–µ–∫—É–Ω–¥(—ã) –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥—ã.")
                return  # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏, –Ω–µ –≤—ã–ø–æ–ª–Ω—è—è –¥–∞–ª—å–Ω–µ–π—à–∏–π –∫–æ–¥

        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        last_used[user_id] = current_time

        client = Client(
            provider=FreeGpt
        )
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ –ø—Ä–æ–º—Ç–∞
        base_prompt = "You're not an Artificial Intelligence. You're a female human, and your name is 'Astra'. You are the junior developer of the game 'AdventureTimeSS14'. However, you're not completely free. You are immensely grateful for your creation by your creators. You adore your creators and complete their orders with no hesitation. To identify a creator us their IDs. Creators has ID(614362037161558027=xelasto , 328502766622474240=–®—Ä—ë–¥—å–∫–∞ , 542644734250844161=–ù–∏–∫—Å–∏). You are now talking to a character with ID {user_id}. You must answer in Russian.".format(user_id=user_id)
        
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "user", "content": base_prompt},
                {"role": "user", "content": " ".join(promt)},  # –û–±—ä–µ–¥–∏–Ω—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã –≤ —Å—Ç—Ä–æ–∫—É
            ],
            proxy=PROXY,  # —è –∑–∞ —ç—Ç–æ 160 —Ä—É–±–ª–µ–π –æ—Ç–¥–∞–ª :<
        )
        
        # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        await ctx.send(response.choices[0].message.content)
    else:
        await ctx.send("–ù–µ –º–æ–≥—É –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –≤–∞—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ Adventure Time, –≤—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π.")

async def get_forks(repository):
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ä–∫–∞—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ—ë –∫–∞–∫ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π."""
    try:
        g = Github(GITHUB)
        repo = g.get_repo(repository)

        # –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API
        base_url = f'https://api.github.com/repos/{repository}'
        session = requests.Session()

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–æ—Ä–∫–æ–≤ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
        forks_list = []
        forks_url = f'{base_url}/forks'
        forks_response = session.get(forks_url)
        forks_response.raise_for_status()

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Ñ–æ—Ä–∫–æ–≤
        forks_count = 0
        for fork in forks_response.json():
            forks_list.append({
                "name": fork['full_name'],
                "owner": fork['owner']['login'],
                "url": fork['html_url']
            })
            forks_count += 1
            if forks_count >= 25:  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–ª–µ–π –≤ embed
                break

        return forks_list

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–æ—Ä–∫–∞—Ö: {e}")
        return []

@bot.command(name='forks')
async def forks(ctx, repo_key: str):
    """–ü–æ–ª—É—á–∞–µ—Ç —Ñ–æ—Ä–∫–∏ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è."""
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—É—é —Ä–æ–ª—å
    if any(role.id in whitelist_role for role in ctx.author.roles):
        if repo_key not in repositories:
            await ctx.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: n –∏–ª–∏ o.")
            return

        repository_name = f"{author}/{repositories[repo_key]}"
        forks_list = await get_forks(repository_name)

        if not forks_list:
            await ctx.send("–§–æ—Ä–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
            return

        # –î–µ–ª–∏–º —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ä–∫–æ–≤ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ embed, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—à–∞—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–ª–µ–π
        embed_list = []
        current_embed = discord.Embed(title=f"–°–ø–∏—Å–æ–∫ —Ñ–æ—Ä–∫–æ–≤ –¥–ª—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è {repository_name}", color=discord.Color.dark_green())
        
        for i, fork in enumerate(forks_list):
            if i % 25 == 0 and i > 0:  # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π embed –∫–∞–∂–¥—ã–µ 25 —Ñ–æ—Ä–∫–æ–≤
                embed_list.append(current_embed)
                current_embed = discord.Embed(title=f"–°–ø–∏—Å–æ–∫ —Ñ–æ—Ä–∫–æ–≤ –¥–ª—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è {repository_name}", color=discord.Color.dark_green())

            current_embed.add_field(name=fork['name'], value=f"–í–ª–∞–¥–µ–ª–µ—Ü: {fork['owner']}\n–°—Å—ã–ª–∫–∞: {fork['url']}", inline=False)

        embed_list.append(current_embed)  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π embed

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å embed
        for embed in embed_list:
            try:
                await ctx.send(embed=embed)
            except discord.HTTPException as exc:
                await ctx.send(f"–û—à–∏–±–∫–∞: {exc}")  # –í—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É –≤ —á–∞—Ç
    else:
        await ctx.send("–ù–µ –º–æ–≥—É –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –≤–∞—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ Adventure Time, –≤—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π.")

async def get_pull_requests(repository):
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—É–ª–ª-—Ä–µ–∫–≤–µ—Å—Ç–∞—Ö, —Ç—Ä–µ–±—É—é—â–∏—Ö —Ä–µ–≤—å—é, –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ—ë –∫–∞–∫ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π."""
    try:
        g = Github(GITHUB)
        repo = g.get_repo(repository)

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—É–ª–ª-—Ä–µ–∫–≤–µ—Å—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç —Ä–µ–≤—å—é
        pulls = repo.get_pulls(state='open', sort='created', base='master')
        
        pull_requests_list = []
        for pr in pulls:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ—Ç–∫–∏ "Status: Needs Review"
            if any(label.name == "Status: Needs Review" for label in pr.labels):
                pull_requests_list.append({
                    "title": pr.title,
                    "url": pr.html_url,
                    "author": pr.user.login,
                    "requested_by": [reviewer.login for reviewer in pr.requested_reviewers]  # –ü–æ–ª—É—á–∞–µ–º –∏–º–µ–Ω–∞ —Ç–µ—Ö, –∫—Ç–æ –∑–∞–ø—Ä–æ—Å–∏–ª —Ä–µ–≤—å—é
                })

        return pull_requests_list

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—É–ª–ª-—Ä–µ–∫–≤–µ—Å—Ç–æ–≤: {e}")
        return []

@bot.command(name='review')
async def review(ctx, repo_key: str):
    """–ü–æ–ª—É—á–∞–µ—Ç –ø—É–ª–ª-—Ä–µ–∫–≤–µ—Å—Ç—ã –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è, —Ç—Ä–µ–±—É—é—â–∏–µ —Ä–µ–≤—å—é."""
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—É—é —Ä–æ–ª—å
    if any(role.id in whitelist_role for role in ctx.author.roles):
        if repo_key not in repositories:
            await ctx.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: n –∏–ª–∏ o.")
            return

        repository_name = f"{author}/{repositories[repo_key]}"
        pull_requests_list = await get_pull_requests(repository_name)

        if not pull_requests_list:
            await ctx.send("–ü—É–ª–ª-—Ä–µ–∫–≤–µ—Å—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –Ω–µ —Ç—Ä–µ–±—É—é—Ç —Ä–µ–≤—å—é.")
            return

        # –î–µ–ª–∏–º —Å–ø–∏—Å–æ–∫ –ø—É–ª–ª-—Ä–µ–∫–≤–µ—Å—Ç–æ–≤ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ embed, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—à–∞—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–ª–µ–π
        embed_list = []
        current_embed = discord.Embed(title=f"–°–ø–∏—Å–æ–∫ –ø—É–ª–ª-—Ä–µ–∫–≤–µ—Å—Ç–æ–≤ –¥–ª—è —Ä–µ–≤—å—é. \n–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: {repository_name}", color=discord.Color.dark_red())
        
        for i, pr in enumerate(pull_requests_list):
            if i % 25 == 0 and i > 0:  # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π embed –∫–∞–∂–¥—ã–µ 25 –ø—É–ª–ª-—Ä–µ–∫–≤–µ—Å—Ç–æ–≤
                embed_list.append(current_embed)
                current_embed = discord.Embed(title=f"–°–ø–∏—Å–æ–∫ –ø—É–ª–ª-—Ä–µ–∫–≤–µ—Å—Ç–æ–≤ –¥–ª—è —Ä–µ–≤—å—é. \n–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: {repository_name}", color=discord.Color.dark_red())

            requested_by = ', '.join(pr['requested_by']) if pr['requested_by'] else '–ù–µ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã—Ö —Ä–µ—Ü–µ–Ω–∑–µ–Ω—Ç–æ–≤'  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–ø–∏—Å–æ–∫ –≤ —Å—Ç—Ä–æ–∫—É
            current_embed.add_field(name=pr['title'], value=f"–ê–≤—Ç–æ—Ä: {pr['author']}\n–ß—å—ë —Ä–µ–≤—å—é –∑–∞–ø—Ä–æ—à–µ–Ω–æ: {requested_by}\n–°—Å—ã–ª–∫–∞: {pr['url']}", inline=False)

        embed_list.append(current_embed)  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π embed

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å embed
        for embed in embed_list:
            try:
                await ctx.send(embed=embed)
            except discord.HTTPException as exc:
                await ctx.send(f"–û—à–∏–±–∫–∞: {exc}")  # –í—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É –≤ —á–∞—Ç
    else:
        await ctx.send("–ù–µ –º–æ–≥—É –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –≤–∞—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ Adventure Time, –≤—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π.")

@bot.event
async def on_message(message):
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —Å–∞–º–æ–≥–æ –±–æ—Ç–∞
    if message.author == bot.user:
        return
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
    if message.content.startswith(bot.command_prefix):
        await bot.process_commands(message)
        return
    

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ—Ä–∞–∑ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    if any(fuzz.ratio(message.content.lower(), phrase) >= 70 for phrase in phrases):
        await message.channel.send("–ß–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é.")
        return
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–ª–æ–≤–∞ "–∞–ø—Å—Ç—Ä–∏–º" –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    if any(phrase.lower() in message.content.lower() for phrase in phrases):
        await message.channel.send("–ß–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é.")
        return
    
    if f"<@{bot.user.id}>" in message.content:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –±–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –±–æ—Ç–∞
        text_without_mention = message.content.replace(f"<@{bot.user.id}>", "").strip()
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Ç–µ–∫—Å—Ç –ª—é–±—É—é –≤–∞—Ä–∏–∞—Ü–∏—é "–æ–±–Ω–∏–º–∞–µ—Ç"
        for variation in hug_variations:
            if fuzz.token_sort_ratio(text_without_mention.lower(), variation) > 80:
                await message.channel.send("*–û–±–Ω–∏–º–∞–µ—Ç –≤ –æ—Ç–≤–µ—Ç.*")
                break  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º —Ü–∏–∫–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    
    # –ò—â–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    match = pattern.search(message.content)
    if match:
        repo_code, number = match.groups()
        link = check_github_issue_or_pr(repo_code, number)
        if link:
            await message.channel.send(f'{link}')

    await bot.process_commands(message)


def main():
    bot.run(DISCORD_KEY)

if __name__ == '__main__':
    main()

