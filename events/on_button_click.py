import disnake


from bot_init import bot

from disnake.ui import Modal, TextInput

class BugReportModal(Modal):
    def __init__(self):
        # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å custom_id
        text_input = TextInput(
            label="–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ —Å–æ–æ–±—â–µ–Ω–∏–∏", 
            placeholder="–û–ø–∏—à–∏—Ç–µ –±–∞–≥, –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ...", 
            style=disnake.TextInputStyle.long,
            custom_id="bug_report_details"
        )
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º text_input
        super().__init__(title="üö® –°–æ–æ–±—â–µ–Ω–∏–µ –æ –±–∞–≥–µ/–æ—Ç–∑—ã–≤/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ", components=[text_input])

    async def callback(self, inter: disnake.MessageInteraction):
        try:
            # –ü–æ–ª—É—á–∞–µ–º –≤–≤–µ–¥—ë–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ text_inputs
            report_text = inter.text_values['bug_report_details']

            # –£–∫–∞–∑–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ä–µ–ø–æ—Ä—Ç–µ/–æ—Ç–∑—ã–≤–∞
            target_channel_id = 1333381720996843551
            target_channel = inter.bot.get_channel(target_channel_id)
            
            if target_channel:
                # –°–æ–∑–¥–∞–µ–º Embed –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
                embed = disnake.Embed(
                    title="üìù –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤/–±–∞–≥-—Ä–µ–ø–æ—Ä—Ç",
                    description=f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {inter.author.mention} ({inter.author.id}):",
                    color=disnake.Color.yellow
                )
                embed.add_field(name="–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:", value=report_text, inline=False)
                embed.set_footer(
                    text=f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {inter.created_at.strftime('%Y-%m-%d %H:%M:%S')} –æ—Ç {inter.author.display_name}",
                    icon_url=inter.author.avatar.url
                )

                # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
                await target_channel.send(embed=embed)
            
            # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
            await inter.response.send_message(
                "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ú—ã –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –µ–≥–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –∏ –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è —É–ª—É—á—à–∏—Ç—å —Å–µ—Ä–≤–∏—Å. üòä", 
                ephemeral=True
            )
        
        except Exception as e:
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ (–µ—Å–ª–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ—à–∏–±–∫–∞)
            print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            try:
                await inter.response.send_message(
                    "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.",
                    ephemeral=True
                )
            except Exception as inner_error:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ: {inner_error}")     


@bot.event
async def on_button_click(inter: disnake.MessageInteraction):
    if inter.component.custom_id == "button_help_id":
        await bot.get_command("help").callback(inter)

    if inter.component.custom_id == "button_team_help_id":
        await bot.get_command("team_help").callback(inter)

    if inter.component.custom_id == "button_git_help_id":
        await bot.get_command("git_help").callback(inter)

    if inter.component.custom_id == "button_admin_help_id":
        await bot.get_command("admin_help").callback(inter)
    
    if inter.component.custom_id == "button_bug_report_id":
        await inter.response.send_modal(BugReportModal())
