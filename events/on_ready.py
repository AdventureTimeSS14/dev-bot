import logging
import time
import asyncio

from bot_init import bot
from commands.github import check_workflows
from config import LOG_CHANNEL_ID
from events.shutdows_after_time import shutdown_after_time
from tasks.check_new_commit_task import monitor_commits
from tasks.git_fetch_pull_task import fetch_merged_pull_requests
from tasks.list_team_task import list_team_task
from tasks.update_status_presence_task import update_status_presence
from tasks.update_status_server_message_eddit_task import (
    update_status_server_message_eddit,
)
from tasks.update_time_shutdows_task import update_time_shutdows


async def start_task_if_not_running(task, task_name: str):
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –∑–∞–¥–∞—á—É, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞.
    """
    if not task.is_running():
        asyncio.create_task(task())  # –ò—Å–ø–æ–ª—å–∑—É–µ–º asyncio.create_task
        print(f"‚úÖ –ó–∞–¥–∞—á–∞ {task_name} –∑–∞–ø—É—â–µ–Ω–∞.")
    else:
        print(f"‚öôÔ∏è –ó–∞–¥–∞—á–∞ {task_name} —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.")


@bot.event
async def on_ready():
    """
    –°–æ–±—ã—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞.
    """
    logging.info(
        "Bot %s (ID: %d) is ready to work!", bot.user.name, bot.user.id
    )
    logging.info("Connected to Discord successfully.")
    guild_names = [guild.name for guild in bot.guilds]
    logging.info("Guilds: %s", guild_names)  # –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤, –∫ –∫–æ—Ç–æ—Ä—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω –±–æ—Ç.

    print("‚úÖ Connected to Discord successfully.")
    print(f"‚úÖ Guilds: {guild_names}")  # –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤, –∫ –∫–æ—Ç–æ—Ä—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω –±–æ—Ç.

    bot.start_time = time.time()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –±–æ—Ç–∞

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ workflows –Ω–∞ —Å–ª—É—á–∞–π –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –Ω–∞ GitHub Actions
    await check_workflows.check_workflows()  # –ó–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É,
                                             # –µ—Å–ª–∏ –±–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ GitHub Actions

    # –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á
    await start_task_if_not_running(
        fetch_merged_pull_requests, "fetch_merged_pull_requests"
    )
    await start_task_if_not_running(list_team_task, "list_team_task")
    await start_task_if_not_running(monitor_commits, "monitor_commits")
    await start_task_if_not_running(
        update_status_presence, "update_status_presence"
    )
    await start_task_if_not_running(
        update_status_server_message_eddit, "update_status_server_message_eddit"
    )
    await start_task_if_not_running(
        update_time_shutdows, "update_time_shutdows"
    )

    print(f"‚úÖ Bot {bot.user.name} (ID: {bot.user.id}) is ready to work!")

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –≤ –ª–æ–≥-–∫–∞–Ω–∞–ª–µ, —á—Ç–æ –±–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω
    channel = bot.get_channel(LOG_CHANNEL_ID)
    if channel:
        await channel.send(
            content=(
                f"‚úÖ **{bot.user.name} —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!**\n"
                f"üîπ **–°—Ç–∞—Ç—É—Å:** –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.\n_ _"
            )
        )
    else:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª —Å ID {LOG_CHANNEL_ID} –¥–ª—è –ª–æ–≥–æ–≤.")

    # –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —á–µ—Ä–µ–∑ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è
    asyncio.create_task(shutdown_after_time())  # –ò—Å–ø–æ–ª—å–∑—É–µ–º asyncio.create_task
