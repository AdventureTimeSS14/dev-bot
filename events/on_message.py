import re

import disnake
import requests
import random

from fuzzywuzzy import fuzz
from bot_init import bot
from events.utils import get_github_link

from config import (
    ADMIN_TEAM,
    AUTHOR,
    GLOBAL_SESSION,
    LOG_CHANNEL_ID,
    REPOSITORIES,
    ADDRESS_MRP,
    POST_ADMIN_HEADERS,
)
from data import JsonData


@bot.event
async def on_message(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞.
    """
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —Å–∞–º–æ–≥–æ –±–æ—Ç–∞
    if message.author == bot.user:
        return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
    if message.content.startswith(bot.command_prefix):
        await bot.process_commands(message)
        return

    # –û—Ç–≤–µ—Ç –Ω–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –±–æ—Ç–∞
    if f"<@{bot.user.id}>" in message.content:
        await call_mention(message)
        await handle_mention(message)
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    if message.channel.id == ADMIN_TEAM:
        await handle_message_deletion(message)

    if message.channel.id == 1309262152586235964:
        await send_ahat_message_post(message)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —à–∞–±–ª–æ–Ω GitHub issue/PR
    await handle_github_pattern(message)
    
    await check_time_transfer_with_fuzz(message)


async def send_ahat_message_post(message):
    """
    –ï—Å–ª–∏ –≤ –ª–æ–≥–∞—Ö –∞-—á–∞—Ç–∞ –∑–∞–º–µ—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    –°–æ–∑–¥–∞–µ—Ç—Å—è –ø–æ—Å—Ç –∑–∞–ø—Ä–æ—Å, –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ –∏–≥—Ä—É
    """
    if message.author.id == 1309279443943948328: # –ò–≥–Ω–æ—Ä–∏–º –í—ç–±–•—É–∫–∫
        return
    # url = f"http://{ADDRESS_DEV}:1211/admin/actions/a_chat" # DEV
    url = f"http://{ADDRESS_MRP}:1212/admin/actions/a_chat"
    post_data = {
        "Message": f"{message.content}",
        "NickName": f"{message.author.name}"
    }
    try:
        response = requests.post(url, json=post_data, headers=POST_ADMIN_HEADERS, timeout=5)
        response.raise_for_status()  # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –∫–æ–¥ 4xx –∏–ª–∏ 5xx, –±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
    except requests.exceptions.Timeout:
        print("Request timed out")
    except requests.exceptions.RequestException as e:
        print(f"Request failed: {e}")
    else:
        print("Status Code:", response.status_code)
        print("Response Text:", response.text)

async def handle_message_deletion(message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ –∏ –ª–æ–≥–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
    """
    await message.delete()

    user = message.author
    dm_message = (
        "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–±–ª—é–¥–∞–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–æ–æ–±—â–µ–Ω–∏–π –∫–∞–Ω–∞–ª–∞. "
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `&team_help` –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–µ–¥–µ–Ω–∏–π."
    )

    # –õ–æ–≥–∏—Ä—É–µ–º –≤ –∫–∞–Ω–∞–ª LOG_CHANNEL_ID
    log_channel = bot.get_channel(LOG_CHANNEL_ID)
    if not log_channel:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª —Å ID {LOG_CHANNEL_ID} –¥–ª—è –ª–æ–≥–æ–≤.")
        return

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –õ–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await user.send(dm_message)

        # –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏
        log_message = (
            f"{user.mention}, –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–∞–Ω–∞–ª–∞. "
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `&team_help` –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π."
        )
        await log_channel.send(log_message)

        # –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–∏—á–∏–Ω—É —É–¥–∞–ª–µ–Ω–∏—è
        log_message = (
            f"‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.mention} "
            f"–±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ {message.channel.mention}. "
            "–ü—Ä–∏—á–∏–Ω–∞: –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª."
        )
        await log_channel.send(log_message)

    except disnake.Forbidden:
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–° (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –±–æ—Ç–∞)
        await log_channel.send(
            f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.mention}."
        )

async def call_mention(message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –±–æ—Ç–∞ –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã.
    """
    text_without_mention = message.content.replace(
        f"<@{bot.user.id}>", ""
    ).strip()
    data = JsonData()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—Ä–∏–∞—Ü–∏–∏ —Ñ—Ä–∞–∑ –∏–∑ JsonData
    for variation in data.get_data("call_bot"):
        if fuzz.token_sort_ratio(text_without_mention.lower(), variation) > 80:
            # –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –º—É—Ä—á–∞–Ω–∏–π
            meow_responses = [
                "–ú—É—Ä—Ä—Ä—Ä?",
                "–ú—Ä—å—è?! >~<",
                "–ú—Ä—Ä—Ä—Ä",
                "–ú—Ä—è? –Ø –∑–¥–µ—Å—è üòΩ",
                "–ú—Ä—Ä—Ä, –∫–∞–∫ —è —Ç–µ–±—è —É—Å–ª—ã—à–∞–ª–∞?! üò∏",
                "–ú—Ä—Ä—Ä, —á—Ç–æ –∑–∞ –≤–∫—É—Å–Ω—è—à–∫–∏ –ø—Ä–∏–Ω–µ—Å?",
                "–ú—è—É, –Ω—É —á—Ç–æ, –ø–æ–≥–ª–∞–¥–∏–º –º–µ–Ω—è? üòª",
                "–ú—Ä—Ä—Ä, —Ç—ã –º–µ–Ω—è —Ä–∞–∑–±—É–¥–∏–ª!",
                "–ú—è—É—É—É—É—É, –≥–¥–µ –º–æ—è –≤–∫—É—Å–Ω—è—à–∫–∞?!",
                "–ú—Ä—Ä—Ä, –Ω–µ —Ç—Ä–æ–≥–∞–π –º–æ—ë –º–µ—Å—Ç–æ –Ω–∞ –¥–∏–≤–∞–Ω–µ! >_<",
            ]

            # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –æ—Ç–≤–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞
            responce = random.choice(meow_responses)

            await message.channel.send(responce)
            break


async def handle_mention(message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –±–æ—Ç–∞ –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã.
    """
    text_without_mention = message.content.replace(
        f"<@{bot.user.id}>", ""
    ).strip()
    data = JsonData()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—Ä–∏–∞—Ü–∏–∏ —Ñ—Ä–∞–∑ –∏–∑ JsonData
    for variation in data.get_data("hug_variations"):
        if fuzz.token_sort_ratio(text_without_mention.lower(), variation) > 80:
            await message.channel.send("*–û–±–Ω–∏–º–∞–µ—Ç –≤ –æ—Ç–≤–µ—Ç.*")
            break


async def handle_github_pattern(message):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —à–∞–±–ª–æ–Ω–∞ GitHub issue/PR –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–µ–≥–æ.
    """
    match = re.search(r"\[(n?|o)(\d+)\]", message.content)  # –î–æ–±–∞–≤–ª–µ–Ω –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å 'n'
    if match:
        repo_code, number = match.groups()
        # –ï—Å–ª–∏ 'n' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —Ç–æ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º 'n' –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        repo_code = 'n' if not repo_code else repo_code
        embed_or_str = await get_github_link(repo_code, number)
        
        # –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω embed (–æ–±—ä–µ–∫—Ç disnake.Embed)
        if isinstance(embed_or_str, disnake.Embed):
            await message.channel.send(embed=embed_or_str)
        elif isinstance(embed_or_str, str):
            await message.channel.send(embed=disnake.Embed(description=embed_or_str))  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç—Ä–æ–∫–∏ –∫–∞–∫ –æ–±—ã—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        else:
            await message.channel.send("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ PR –∏–ª–∏ Issue.")


async def check_time_transfer_with_fuzz(message):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ñ—Ä–∞–∑, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –ø–µ—Ä–µ–Ω–æ—Å–æ–º –≤—Ä–µ–º–µ–Ω–∏, –∏—Å–ø–æ–ª—å–∑—É—è fuzz.
    """
    time_transfer_phrases = [
        "–∞ –≥–¥–µ –ø–µ—Ä–µ–Ω–æ—Å –≤—Ä–µ–º–µ–Ω–∏",
        "–≥–¥–µ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤—Ä–µ–º—è",
        "–∫–∞–∫ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è",
        "–ø–µ—Ä–µ–Ω–æ—Å –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Ä–æ–ª–∏",
        "–ø–µ—Ä–µ–Ω–æ—Å –≤—Ä–µ–º–µ–Ω–∏",
        "–ø–µ—Ä–µ–Ω–æ—Å –≤—Ä–µ–º–µ–Ω–∏ —Å –ø—Ä–æ–µ–∫—Ç–∞",
        "–¢—É—Ç –µ—Å—Ç—å –ø–µ—Ä–µ–Ω–æ—Å –≤—Ä–µ–º–µ–Ω–∏",
        "—è —Ö–æ—á—É –ø–æ–Ω—è—Ç—å –≥–¥–µ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤—Ä–µ–º—è –Ω–∞ —ç—Ç–æ–º –ø—Ä–æ–µ–∫—Ç–µ",
        "—è —Ö–æ—á—É –ø–æ–Ω—è—Ç—å –≥–¥–µ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤—Ä–µ–º—è",
        "—Ö–æ—á—É –ø–æ–Ω—è—Ç—å –≥–¥–µ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤—Ä–µ–º—è",
    ]

    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–π —Ñ—Ä–∞–∑–µ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é fuzz
    for phrase in time_transfer_phrases:
        if fuzz.token_sort_ratio(message.content.lower(), phrase) > 80:
            # –û—Ç–≤–µ—Ç –±–æ—Ç–∞
            response = (
                "–í—ã –≥–æ–≤–æ—Ä–∏—Ç–µ –æ –ø–µ—Ä–µ–Ω–æ—Å–µ –≤—Ä–µ–º–µ–Ω–∏? –î–ª—è —Ç–∞–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ —Ç—ã –º–æ–∂–µ—à—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Å–ª–µ–¥—É—é—â–∏–π –∫–∞–Ω–∞–ª: "
                "https://discord.com/channels/901772674865455115/1172159356117200936"
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∫–∞–Ω–∞–ª
            await message.channel.send(response)
            break
